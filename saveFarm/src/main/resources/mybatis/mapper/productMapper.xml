<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.ProductMapper">
	<select id="getProductList" parameterType="map" resultType="com.sp.app.model.Product">
		SELECT p.PRODUCTNUM, PRODUCTNAME, PRODUCTDESC, DELIVERYFEE, MAINIMAGEFILENAME, PRODUCTCLASSIFICATION,
			STOCKQUANTITY, UNIT, pd.UNITPRICE, DISCOUNTRATE, NVL2(w.memberId, 1, 0) userWish
		FROM product p
		LEFT OUTER JOIN productDetail pd ON p.PRODUCTNUM = pd.PRODUCTNUM
		LEFT OUTER JOIN wish w ON p.PRODUCTNUM = w.PRODUCTNUM AND memberId = #{memberId, jdbcType=BIGINT}
		WHERE PRODUCTCLASSIFICATION = 100
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>

	<select id="getRescuedProductList" parameterType="map" resultType="com.sp.app.model.Product">
		SELECT p.PRODUCTNUM, PRODUCTNAME, PRODUCTDESC, DELIVERYFEE, MAINIMAGEFILENAME, PRODUCTCLASSIFICATION,
			STOCKQUANTITY, UNIT, pd.UNITPRICE, DISCOUNTRATE, endDate, isUrgent, farmName
		FROM product p
		LEFT OUTER JOIN productDetail pd ON p.PRODUCTNUM = pd.PRODUCTNUM
		LEFT OUTER JOIN rescuedProductInfo rp ON p.PRODUCTNUM = rp.PRODUCTNUM
		LEFT OUTER JOIN supply s ON rp.supplyNum = s.supplyNum
        LEFT OUTER JOIN farm f ON f.farmNum = s.farmNum
		WHERE PRODUCTCLASSIFICATION = 200
	</select>

	<select id="getRescuedProductNumsClosingSoon" parameterType="java.time.LocalDateTime" resultType="com.sp.app.model.Product">
		SELECT p.PRODUCTNUM
		FROM product p
		LEFT OUTER JOIN rescuedProductInfo rp ON p.PRODUCTNUM = rp.PRODUCTNUM 
		WHERE PRODUCTCLASSIFICATION = 200 AND endDate BETWEEN SYSDATE AND #{twentyFourHoursLater}
	</select>

	<select id="getProductInfo" parameterType="Long" resultType="com.sp.app.model.Product">
		SELECT p.PRODUCTNUM, PRODUCTNAME, PRODUCTDESC, DELIVERYFEE, MAINIMAGEFILENAME, PRODUCTCLASSIFICATION,
			STOCKQUANTITY, UNIT, pd.UNITPRICE, DISCOUNTRATE
		FROM product p
		LEFT OUTER JOIN productDetail pd ON p.PRODUCTNUM = pd.PRODUCTNUM
		WHERE p.PRODUCTNUM = #{productNum} AND PRODUCTCLASSIFICATION = 100
	</select>

	<select id="getRescuedProductInfo" parameterType="Long" resultType="com.sp.app.model.Product">
		SELECT p.PRODUCTNUM, PRODUCTNAME, PRODUCTDESC, DELIVERYFEE, MAINIMAGEFILENAME, PRODUCTCLASSIFICATION,
			STOCKQUANTITY, UNIT, pd.UNITPRICE, DISCOUNTRATE, endDate, isUrgent, farmName
		FROM product p
		LEFT OUTER JOIN productDetail pd ON p.PRODUCTNUM = pd.PRODUCTNUM
		LEFT OUTER JOIN rescuedProductInfo rp ON p.PRODUCTNUM = rp.PRODUCTNUM
		LEFT OUTER JOIN supply s ON rp.supplyNum = s.supplyNum
        LEFT OUTER JOIN farm f ON f.farmNum = s.farmNum
		WHERE p.PRODUCTNUM = #{productNum} AND PRODUCTCLASSIFICATION = 200 AND ENDDATE >= SYSDATE
	</select>

	<select id="getProductImageList" parameterType="Long" resultType="com.sp.app.model.Product">
		SELECT PRODUCTIMAGENUM, PRODUCTIMAGEFILENAME, PRODUCTNUM
		FROM productImage
		WHERE PRODUCTNUM = #{productNum}
	</select>
	
	<insert id="insertProduct" parameterType="com.sp.app.model.Product">
        <selectKey keyProperty="productNum" resultType="long" order="BEFORE">
            SELECT PRODUCT_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO product (
            PRODUCTNUM, PRODUCTNAME, PRODUCTDESC,
            DELIVERYFEE, MAINIMAGEFILENAME, PRODUCTCLASSIFICATION
        ) VALUES (
            #{productNum}, #{productName}, #{productDesc},
            #{deliveryFee}, #{mainImageFileName}, #{productClassification}
        )
    </insert>

    <insert id="insertProductDetail" parameterType="com.sp.app.model.Product">
        INSERT INTO productDetail (
            PRODUCTNUM, STOCKQUANTITY, UNIT,
            UNITPRICE, DISCOUNTRATE
        ) VALUES (
            #{productNum}, #{stockQuantity}, #{unit},
            #{unitPrice}, #{discountRate}
        )
    </insert>

    <insert id="insertRescuedProduct" parameterType="com.sp.app.model.Product">
        INSERT INTO rescuedProductInfo (
            PRODUCTNUM, ENDDATE, SUPPLYNUM, ISURGENT
        ) VALUES (
            #{productNum}, #{endDate}, #{supplyNum}, 0
        )
    </insert>

    <insert id="insertProductImage" parameterType="java.util.List">
        INSERT INTO productImage (PRODUCTIMAGENUM, PRODUCTIMAGEFILENAME, PRODUCTNUM)
	        VALUES (productImage_seq.nextVAL, #{PRODUCTIMAGEFILENAME}, #{PRODUCTNUM});
    </insert>


    <update id="updateProduct" parameterType="com.sp.app.model.Product">
        UPDATE product
        <set>
            <if test="productName != null and productName != ''">PRODUCTNAME = #{productName},</if>
            <if test="productDesc != null and productDesc != ''">PRODUCTDESC = #{productDesc},</if>
            <if test="deliveryFee != null and deliveryFee != ''">DELIVERYFEE = #{deliveryFee},</if>
            <if test="mainImageFileName != null and mainImageFileName != ''">MAINIMAGEFILENAME = #{mainImageFileName},</if>
        </set>
        WHERE PRODUCTNUM = #{productNum}
    </update>

    <update id="updateProductDetail" parameterType="com.sp.app.model.Product">
        UPDATE productDetail
        <set>
            <if test="stockQuantity != null and stockQuantity != ''">STOCKQUANTITY = #{stockQuantity},</if>
            <if test="unit != null and unit != ''">UNIT = #{unit},</if>
            <if test="unitPrice != null and unitPrice != ''">UNITPRICE = #{unitPrice},</if>
            <if test="discountRate != null and discountRate != ''">DISCOUNTRATE = #{discountRate},</if>
        </set>
        WHERE PRODUCTNUM = #{productNum}
    </update>

    <update id="updateRescuedProduct" parameterType="com.sp.app.model.Product">
        UPDATE rescuedProductInfo
        <set>
            <if test="endDate != null and endDate != ''">ENDDATE = #{endDate},</if>
            <if test="supplyNum != null and supplyNum != ''">SUPPLYNUM = #{supplyNum},</if>
            <if test="isUrgent != null and isUrgent != ''">ISURGENT = #{isUrgent},</if>
        </set>
        WHERE PRODUCTNUM = #{productNum}
    </update>


    <delete id="deleteProduct" parameterType="long">
        DELETE FROM product
        WHERE PRODUCTNUM = #{productNum}
    </delete>
    
    <delete id="deleteProductImage" parameterType="long">
        DELETE FROM productImage
        WHERE PRODUCTNUM = #{productNum}
    </delete>
    
    <select id="getDataCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*)
		FROM product
		WHERE productClassification = #{productClassification, jdbcType = INTEGER}
	</select>
</mapper>