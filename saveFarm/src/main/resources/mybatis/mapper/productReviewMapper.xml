<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.ProductReviewMapper">
	<insert id="insertReview" parameterType="com.sp.app.model.ProductReview">
	    INSERT INTO ProductReview (ORDERDETAILNUM, REVIEW, STAR, REVIEWDATE,  PRODUCTNUM, REVIEWBLOCK, REVIEWTITLE) 
	    	VALUES (#{orderDetailNum}, #{review}, #{star}, SYSDATE, #{productNum}, 0, #{reviewTitle})
	</insert>
	
	<update id="updateReview" parameterType="com.sp.app.model.ProductReview">
		UPDATE ProductReview SET REVIEWTITLE = #{reviewTitle}, REVIEW = #{review}, STAR = #{star}, REVIEWDATE = SYSDATE, REVIEWBLOCK = #{reviewBlock}
		WHERE ORDERDETAILNUM = #{orderDetailNum}
	</update>
	
	<delete id="deleteReview" parameterType="long">
		DELETE FROM ProductReview
		WHERE ORDERDETAILNUM = #{orderDetailNum}
	</delete>
	
	<select id="getReviewList" resultType="com.sp.app.model.ProductReview" parameterType="map">
		SELECT pr.orderDetailNum, review, star, reviewDate, reviewBlock, pr.productNum, reviewTitle, po.orderDate,
			productName, p.mainImageFilename, po.memberId reviewerMemberId, name reviewerName, profilePhoto reviewerProfilePhoto,
			pd.unit, COUNT(prl.orderDetailNum) helpfulCount
		FROM ProductReview pr
		JOIN orderDetail od ON pr.orderDetailNum = od.orderDetailNum
		JOIN productOrder po ON po.orderNum = od.orderNum
		LEFT OUTER JOIN product p ON pr.productNum = p.productNum
		LEFT OUTER JOIN productDetail pd ON pd.productNum = p.productNum
		LEFT OUTER JOIN member2 m2 ON po.memberId = m2.memberId
		LEFT OUTER JOIN productReviewLike prl ON pr.orderDetailNum = prl.orderDetailNum
		GROUP BY
    		pr.orderDetailNum, review, star, reviewDate, reviewBlock, pr.productNum, reviewTitle, 
    		po.orderDate, productName, p.mainImageFilename, po.memberId, name, profilePhoto, pd.unit
		ORDER BY reviewDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="getReviewListByProductNum" resultType="com.sp.app.model.ProductReview" parameterType="map">
		SELECT pr.orderDetailNum, review, star, reviewDate, reviewBlock, pr.productNum, reviewTitle, po.orderDate,
			productName, p.mainImageFilename, po.memberId reviewerMemberId, name reviewerName, profilePhoto reviewerProfilePhoto, pd.unit, 
			(
				SELECT COUNT(*)
	     		FROM productReviewLike prl
	     		WHERE prl.orderDetailNum = pr.orderDetailNum
	     	) AS helpfulCount,
    		(
    			SELECT COUNT(*)
	     		FROM productReviewLike prl
	     		WHERE prl.orderDetailNum = pr.orderDetailNum AND prl.memberId = #{memberId, jdbcType=VARCHAR}
	     	) AS userLike
		FROM ProductReview pr
		JOIN orderDetail od ON pr.orderDetailNum = od.orderDetailNum
		JOIN productOrder po ON po.orderNum = od.orderNum
		LEFT OUTER JOIN product p ON pr.productNum = p.productNum
		LEFT OUTER JOIN productDetail pd ON pd.productNum = p.productNum
		LEFT OUTER JOIN member2 m2 ON po.memberId = m2.memberId
		WHERE reviewBlock = 0 AND pr.productNum = #{productNum}
		ORDER BY reviewDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="getMyReviewList" resultType="com.sp.app.model.ProductReview" parameterType="map">
		SELECT pr.orderDetailNum, review, star, reviewDate, reviewBlock, pr.productNum, reviewTitle, po.orderDate,
			productName, p.mainImageFilename, po.memberId reviewerMemberId, name reviewerName, profilePhoto reviewerProfilePhoto, pd.unit, 
			(
				SELECT COUNT(*)
	     		FROM productReviewLike prl
	     		WHERE prl.orderDetailNum = pr.orderDetailNum
	     	) AS helpfulCount
		FROM ProductReview pr
		JOIN orderDetail od ON pr.orderDetailNum = od.orderDetailNum
		JOIN productOrder po ON po.orderNum = od.orderNum
		LEFT OUTER JOIN product p ON pr.productNum = p.productNum
		LEFT OUTER JOIN productDetail pd ON pd.productNum = p.productNum
		LEFT OUTER JOIN member2 m2 ON po.memberId = m2.memberId
		WHERE reviewBlock = 0 AND po.memberId = #{memberId}
		ORDER BY reviewDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="getDataCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*)
		FROM ProductReview
		WHERE productNum = #{productNum} AND reviewBlock = 0
	</select>

	<select id="getAllDataCount" resultType="Integer">
		SELECT COUNT(*) FROM ProductReview
	</select>

	<select id="getMyReviewDataCount" parameterType="long" resultType="Integer">
		SELECT COUNT(*)
		FROM ProductReview pr
		JOIN orderDetail od ON pr.orderDetailNum = od.orderDetailNum
		JOIN productOrder po ON po.orderNum = od.orderNum
		WHERE po.memberId = #{memberId} AND reviewBlock = 0
	</select>
	
	<insert id="insertReviewLike" parameterType="map">
		INSERT INTO productReviewLike(memberId, orderDetailNum)
			VALUES (#{memberId}, #{orderDetailNum})
	</insert>

	<select id="getReviewLikeCount" resultType="int" parameterType="long">
    	SELECT COUNT(*) helpfulCount
		FROM productReviewLike
		WHERE orderDetailNum = #{orderDetailNum}
	</select>
	    
	<delete id="deleteReviewLike" parameterType="map">
		DELETE FROM productReviewLike
		WHERE memberId = #{memberId} 
		<if test="orderDetailNum != null">
			AND orderDetailNum = #{orderDetailNum}		
		</if>
	</delete>
	
</mapper>