<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.admin.mapper.ClaimManageMapper">
	<sql id="where-list">
		<if test="status != null">
			<choose>
				<when test="status == 0">
					AND status = 0
				</when>
				<when test="status == 1">
					AND status = 1
				</when>
				<when test="status == 2">
					AND status = 2
				</when>
			</choose>
		</if>
	</sql>
	
	<select id="getClaimList" parameterType="map" resultType="com.sp.app.admin.model.Claim">
    SELECT *
    FROM (
        SELECT
            'return' AS "listType",      
            returnNum AS "num",      
            TO_CHAR(reqDate, 'YYYY-MM-DD HH24:MI') reqDate,     
            reason AS "detail1",        
            TO_CHAR(quantity) AS "detail2", 
            TO_CHAR(returnDate, 'YYYY-MM-DD HH24:MI') AS "processDate",
            r.orderDetailNum,           
            status,              
            po.memberId, email             
        FROM return r 
        JOIN orderDetail od ON r.orderDetailNum = od.orderDetailNum
        JOIN productOrder po ON od.orderNum = po.orderNum
        JOIN member2 m ON po.memberId = m.memberId
        <where>
            <include refid="where-list"/>
        </where>

        UNION ALL

        SELECT
            'refund' AS "listType",   
            refundNum AS "num",       
            TO_CHAR(reqDate, 'YYYY-MM-DD HH24:MI') reqDate,  
            TO_CHAR(refundAmount) AS "detail1", 
            refundMethod AS "detail2",  
            TO_CHAR(refundDate, 'YYYY-MM-DD HH24:MI') AS "processDate",       
            r.orderDetailNum,           
            status,                    
            po.memberId, email             
        FROM refund r
        JOIN orderDetail od ON r.orderDetailNum = od.orderDetailNum
        JOIN productOrder po ON od.orderNum = po.orderNum
        JOIN member2 m ON po.memberId = m.memberId
        <where>
            <include refid="where-list"/>
        </where>
    ) combined_list
    ORDER BY reqDate DESC, "num" DESC
    OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
    <select id="getDataCount" parameterType="map" resultType="int">
    SELECT COUNT(*)
    FROM (
        SELECT returnNum
        FROM return r
        JOIN orderDetail od ON r.orderDetailNum = od.orderDetailNum
        JOIN productOrder po ON od.orderNum = po.orderNum
        JOIN member2 m ON po.memberId = m.memberId
        <where>
            <include refid="where-list"/>
        </where>

        UNION ALL

        SELECT refundNum
        FROM refund r
        JOIN orderDetail od ON r.orderDetailNum = od.orderDetailNum
        JOIN productOrder po ON od.orderNum = po.orderNum
        JOIN member2 m ON po.memberId = m.memberId
        <where>
            <include refid="where-list"/>
        </where>
    ) combined_list
</select>
</mapper>