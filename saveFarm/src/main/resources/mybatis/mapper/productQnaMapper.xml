<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.ProductQnaMapper">
	<insert id="insertQna" parameterType="com.sp.app.model.ProductQna">
		<selectKey keyProperty="qnaNum" resultType="long" order="BEFORE">
	        SELECT productQna_seq.NEXTVAL FROM DUAL
	    </selectKey>
	    INSERT INTO productQna(qnaNum, secret, question, title, block, memberId, productNum, qnaDate)
	    	VALUES(#{qnaNum}, #{secret}, #{question}, #{title}, 0, #{memberId}, #{productNum}, SYSDATE)
	</insert>
	
	<update id="updateQna" parameterType="com.sp.app.model.ProductQna">
		UPDATE productQna SET answer = #{answer}, answerId = #{answerId}, answerDate = SYSDATE, block = #{block}
		WHERE qnaNum = #{qnaNum}
	</update>
	
	<delete id="deleteQna" parameterType="long">
		DELETE FROM productQna
		WHERE qnaNum = #{qnaNum}
	</delete>
	
	<sql id="qnaColumns">
	    SELECT qnaNum, secret, question, answer, block, q.memberId, q.answerId, productNum, 
	           TO_CHAR(qnaDate, 'YYYY-MM-DD HH24:MI') qnaDate, answerdate, title, 
	           qm.name name, am.name answerName
	    FROM productQna q
	    LEFT OUTER JOIN member2 qm ON q.memberId = qm.memberId
	    LEFT OUTER JOIN member2 am ON q.answerId = am.memberId
	</sql>
	
	<select id="getQnaList" parameterType="long" resultType="com.sp.app.model.ProductQna">
		<include refid="qnaColumns"/>
		WHERE block = 0 AND productNum = #{productNum}
		ORDER BY qnaDate DESC
	</select>
	
	<select id="getMyQnaList" parameterType="map" resultType="com.sp.app.model.ProductQna">
		<include refid="qnaColumns"/>
		WHERE block = 0 AND q.memberId = #{memberId}
		ORDER BY qnaDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="getAllQnaList" parameterType="map" resultType="com.sp.app.model.ProductQna">
		SELECT qnaNum, secret, question, answer, block, q.memberId, q.answerId, q.productNum, 
	           TO_CHAR(qnaDate, 'YYYY-MM-DD HH24:MI') qnaDate, answerdate, title, 
	           qm.name name, am.name answerName, productName
	    FROM productQna q
	    LEFT OUTER JOIN member2 qm ON q.memberId = qm.memberId
	    LEFT OUTER JOIN member2 am ON q.answerId = am.memberId
	    LEFT OUTER JOIN product p ON q.productNum = p.productNum
	    ORDER BY qnaDate DESC
	    OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="getDataCount" parameterType="Long" resultType="Integer">
		SELECT COUNT(*)
		FROM productQna
		WHERE productNum = #{productNum} AND block = 0
	</select>
	
	<select id="getAllDataCount" parameterType="Long" resultType="Integer">
		SELECT COUNT(*) FROM productQna
	</select>

	<select id="getMyQnaDataCount" parameterType="long" resultType="Integer">
		SELECT COUNT(*)
		FROM productQna
		WHERE memberId = #{memberId} AND block = 0
	</select>
</mapper>